// Skull.js 0.0.1-alpha
// Build Date: 2012-08-20

// (c) 2012 Kristofer Joseph.
// Skull may be freely distributed under the MIT license.
// For all details and documentation:
// http://www.skulljs.com
(function(a){"use strict";var b=a.Skull=a.Skull||{};b.extend=Backbone.Model.extend})(this),function(a){"use strict";var b=a.Skull=a.Skull||{},c=b.EventMap=_.clone(Backbone.Events);c.publish=c.trigger,c.subscribe=c.on,c.unsubscribe=c.off}(this),function(a){"use strict";var b=a.Skull=a.Skull||{},c=b.CareTaker=function(){};_.extend(c.prototype,{undoStack:[],redoStack:[],addMemento:function(a){return this.undoStack.push(a),this},undo:function(){if(this.undoStack.length){var a=this.undoStack.pop(),b=a.originator;b&&b.setMemento&&b.createMemento&&(this.redoStack.push(b.createMemento()),b.setMemento(a))}return this},redo:function(){if(this.redoStack.length){var a=this.redoStack.pop(),b=a.originator;b&&b.setMemento&&b.createMemento&&(this.undoStack.push(b.createMemento()),b.setMemento(a))}return this}})}(this),function(a){"use strict";var b=a.Skull=a.Skull||{},c=b.Memento=function(a){var a=a||{},b={},c={};_.extend(this,a)};_.extend(c.prototype,{getOriginator:function(){return this.originator},setOriginator:function(a){return this.originator=a,this},getState:function(){return this.state},setState:function(a){return this.state=a,this}})}(this),function(a){"use strict";var b=a.Skull=a.Skull||{},c=b.Originator=Backbone.Model.extend();_.extend(c.prototype,{createMemento:function(){var a=new b.Memento({originator:this,state:this.toJSON()});return a},setMemento:function(a){var b=a.state;if(this.set)this.set(b);else if(this.reset)this.reset(b);else throw new Error("You need to override setMemento to supply a way to set your state");return this},store:function(){return b.EventMap.publish("Memento:Store",this.createMemento()),this}}),c.extend=b.extend}(this),function(a){"use strict";var b=a.Skull=a.Skull||{},c=b.Command=function(){};_.extend(c.prototype,{execute:function(){return this}}),c.extend=b.extend}(this),function(a){"use strict";var b=a.Skull=a.Skull||{},c=b.CommandMap=function(a){var a=a||b.EventMap;return{addCommand:function(b,c){if(c.execute)a.subscribe(b,c.execute);else throw new Error("You must supply an execute method");return this},removeCommand:function(b,c){return a.unsubscribe(b,c),this}}}()}(this);